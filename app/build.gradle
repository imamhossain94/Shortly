plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}


android {
    apply from: '../dependencies.gradle'
    namespace 'com.newagedevs.url_shortener'
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.newagedevs.url_shortener"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        resConfigs versions.resConfigs

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Get the secret keys
        buildConfigField "String", "CUTTLY_API_KEY", "\"${getProperty("local.properties", "cuttly_api_key")}\""
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations.all {
    exclude group: 'androidx.appcompat', module: 'appcompat'
    exclude group: 'androidx.core', module: 'core'
    exclude group: 'androidx.drawerlayout', module: 'drawerlayout'
    exclude group: 'androidx.viewpager', module: 'viewpager'
    exclude group: 'androidx.viewpager2', module: 'viewpager2'
    exclude group: 'androidx.fragment', module: 'fragment'
    exclude group: 'androidx.customview', module: 'customview'
    exclude group: 'androidx.coordinatorlayout', module: 'coordinatorlayout'
    exclude group: 'com.android.support', module: 'support-compat'
    exclude group: 'com.google.android.material', module: 'material'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'

    // one ui project
    implementation "io.github.oneuiproject:design:$versions.design"
    implementation "io.github.oneuiproject:icons:$versions.icons"

    // one ui project sesl
    implementation "io.github.oneuiproject.sesl:appcompat:$versions.appcompat"
    implementation "io.github.oneuiproject.sesl:material:$versions.material"
    implementation("io.github.oneuiproject.sesl:indexscroll:$versions.indexscroll")
    implementation "io.github.oneuiproject.sesl:recyclerview:$versions.recyclerview"
    implementation "io.github.oneuiproject.sesl:preference:$versions.preference"

    //
    implementation "androidx.fragment:fragment-ktx:1.2.5"


    // architecture components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"

    // binding
    implementation "com.github.skydoves:bindables:$versions.bindablesVersion"

    // koin
    implementation "org.koin:koin-android:$versions.koinVersion"
    implementation "org.koin:koin-android-scope:$versions.koinVersion"
    implementation "org.koin:koin-android-viewmodel:$versions.koinVersion"

    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$versions.retrofitVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

    // adapter
    implementation "com.github.skydoves:baserecyclerviewadapter:$versions.baseAdapter"

    // whatIf
    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"

    // bundler
    implementation "com.github.skydoves:bundler:$versions.bundlerVersion"

    // android bottom navigation
    implementation "com.github.skydoves:androidbottombar:$versions.androidBottomBarVersion"

    // debugging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"



}
